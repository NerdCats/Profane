//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Profane.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IProfaneListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class ProfaneBaseListener : IProfaneListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] ProfaneParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] ProfaneParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] ProfaneParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] ProfaneParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.printstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintstmt([NotNull] ProfaneParser.PrintstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.printstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintstmt([NotNull] ProfaneParser.PrintstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.assignstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignstmt([NotNull] ProfaneParser.AssignstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.assignstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignstmt([NotNull] ProfaneParser.AssignstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.setstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetstmt([NotNull] ProfaneParser.SetstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.setstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetstmt([NotNull] ProfaneParser.SetstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.ifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfstmt([NotNull] ProfaneParser.IfstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.ifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfstmt([NotNull] ProfaneParser.IfstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.conditionExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionExpr([NotNull] ProfaneParser.ConditionExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.conditionExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionExpr([NotNull] ProfaneParser.ConditionExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ProfaneParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ProfaneParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.opExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpExpression([NotNull] ProfaneParser.OpExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.opExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpExpression([NotNull] ProfaneParser.OpExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOp([NotNull] ProfaneParser.OpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOp([NotNull] ProfaneParser.OpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelop([NotNull] ProfaneParser.RelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelop([NotNull] ProfaneParser.RelopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] ProfaneParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] ProfaneParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProfaneParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] ProfaneParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProfaneParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] ProfaneParser.NumberContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
